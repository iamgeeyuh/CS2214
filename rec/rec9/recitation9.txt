1. 0.8*4 + 0.15*10 + 0.05*30 = 6.2

2. a. line 1-2, 1-3: read-after-write on $1
   b. line 1-2: read-after-write and write-after-write on $1
   c. line 1-3: write-after-write on $4
   d. line 1-4: write-after-read on $7
   e. line 1-2: read-after-write on $1
      line 2: hazard because $1 may have unknown value if movi hasn't written $1 yet
   f. no conflict
   g. line 2-4: write-after-write on $4
      line 1-3: write-after-write on $1
      line 1-2, 1-4, 2-4, 3-4: read-after-write and write-after-read on $1

3. a. 1, 3, 2
   b. none
   c. 1, 3, 2
      2, 1, 3
   d. 1, 3, 2, 4
      1, 4, 2, 3
      1, 4, 3, 2
      2, 3, 1, 4
      3, 2, 1, 4
      2, 1, 3, 4
      3, 1, 2, 4
   e. none
   f. 1, 3, 2
      2, 1, 3
      2, 3, 1
      3, 1, 2
      3, 2, 1
   g. none

4. a. line 0-1, 0-3, 0-4: read-after-write on $1
      line 2-4: write-after-write on $3
      line 3-4: read-after-write on $2
      line 1: control hazard because jeq has not finished evaluating whether it will go to skip or not when addi is already being loaded
   b. lw $1, data($0)
      nop
      nop
      nop 
      jeq $1, $0, skip
      addi $3, $0, 0
      addi $2, $1, 5
      nop
      nop
      nop
      sub $3, $1, $2
      skip: halt
      data: .fill 10

5. check for negative immediates

   movi $1, 1
   movi $2, 1
   jeq $2, $1, -2